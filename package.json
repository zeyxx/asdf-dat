{
  "package.json": {
    "name": "asdf-dat",
    "version": "2.0.0",
    "description": "ASDF DAT - Automated Buyback & Burn System with Random Daily Execution",
    "main": "dist/index.js",
    "scripts": {
      "build": "tsc && anchor build",
      "clean": "rm -rf dist target",
      "compile": "tsc",
      "test": "anchor test",
      
      "// DAT Commands": "",
      "dat:init": "ts-node src/bot.ts init",
      "dat:start": "ts-node src/bot.ts start",
      "dat:stats": "ts-node src/bot.ts stats",
      "dat:test": "ts-node src/bot.ts test",
      
      "// Dashboard": "",
      "dashboard": "ts-node src/dashboard.ts",
      "dashboard:dev": "nodemon src/dashboard.ts",
      
      "// Production": "",
      "start": "node dist/bot.js start",
      "start:dashboard": "node dist/dashboard.js",
      "pm2:start": "pm2 start ecosystem.config.js",
      "pm2:stop": "pm2 stop asdf-dat",
      "pm2:logs": "pm2 logs asdf-dat",
      
      "// Development": "",
      "dev": "ts-node-dev --respawn src/bot.ts start",
      "dev:dashboard": "ts-node-dev --respawn src/dashboard.ts",
      
      "// Deployment": "",
      "deploy": "anchor deploy",
      "deploy:mainnet": "anchor deploy --provider.cluster mainnet",
      "verify": "anchor verify",
      
      "// Utils": "",
      "lint": "eslint src/**/*.ts",
      "format": "prettier --write \"src/**/*.ts\""
    },
    "dependencies": {
      "@coral-xyz/anchor": "^0.30.1",
      "@solana/spl-token": "^0.4.0",
      "@solana/web3.js": "^1.91.0",
      "axios": "^1.6.5",
      "dotenv": "^16.4.1",
      "express": "^4.18.2",
      "socket.io": "^4.6.1",
      "node-cron": "^3.0.3"
    },
    "devDependencies": {
      "@types/node": "^20.11.5",
      "@types/express": "^4.17.21",
      "@types/node-cron": "^3.0.11",
      "@typescript-eslint/eslint-plugin": "^6.19.0",
      "@typescript-eslint/parser": "^6.19.0",
      "nodemon": "^3.0.2",
      "ts-node": "^10.9.2",
      "ts-node-dev": "^2.0.0",
      "typescript": "^5.3.3",
      "eslint": "^8.56.0",
      "prettier": "^3.2.4"
    }
  },
  
  "tsconfig.json": {
    "compilerOptions": {
      "target": "ES2020",
      "module": "commonjs",
      "lib": ["ES2020"],
      "outDir": "./dist",
      "rootDir": "./src",
      "strict": true,
      "esModuleInterop": true,
      "skipLibCheck": true,
      "forceConsistentCasingInFileNames": true,
      "resolveJsonModule": true,
      "declaration": true,
      "declarationMap": true,
      "sourceMap": true,
      "moduleResolution": "node",
      "allowSyntheticDefaultImports": true
    },
    "include": ["src/**/*"],
    "exclude": ["node_modules", "dist", "target"]
  },
  
  ".env.example": "# ASDF DAT Configuration\n\n# Program ID (update after deployment)\nPROGRAM_ID=DATxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n# Wallet path\nWALLET_PATH=./wallet.json\n\n# Network\nNETWORK=mainnet\n\n# RPC URL (optional, defaults to public)\nRPC_URL=https://api.mainnet-beta.solana.com\n\n# Dashboard\nDASHBOARD_PORT=3000\n\n# Alerts (Discord/Slack webhook)\nWEBHOOK_URL=\n\n# Logging\nLOG_LEVEL=info\n",
  
  "ecosystem.config.js": "module.exports = {\n  apps: [{\n    name: 'asdf-dat',\n    script: './dist/bot.js',\n    args: 'start',\n    instances: 1,\n    autorestart: true,\n    watch: false,\n    max_memory_restart: '500M',\n    env: {\n      NODE_ENV: 'production'\n    },\n    error_file: './logs/err.log',\n    out_file: './logs/out.log',\n    log_file: './logs/combined.log',\n    time: true\n  },\n  {\n    name: 'asdf-dashboard',\n    script: './dist/dashboard.js',\n    instances: 1,\n    autorestart: true,\n    watch: false,\n    env: {\n      NODE_ENV: 'production',\n      DASHBOARD_PORT: 3000\n    }\n  }]\n}",
  
  "Anchor.toml": "[features]\nseeds = false\nskip-lint = false\n\n[programs.mainnet]\nasdf_dat = \"DATxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n\n[programs.devnet]\nasdf_dat = \"DATxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n\n[registry]\nurl = \"https://api.apr.dev\"\n\n[provider]\ncluster = \"mainnet\"\nwallet = \"./wallet.json\"\n\n[scripts]\ntest = \"yarn run ts-mocha -p ./tsconfig.json -t 1000000 tests/**/*.ts\"\n\n[test]\nstartup_wait = 5000",
  
  "Cargo.toml": "[workspace]\nmembers = [\n    \"programs/*\"\n]\nresolver = \"2\"\n\n[profile.release]\noverflow-checks = true\nlto = \"fat\"\ncodegen-units = 1\n[profile.release.build-override]\nopt-level = 3\nincremental = false\ncodegen-units = 1",
  
  ".gitignore": "# Dependencies\nnode_modules/\ntarget/\ndist/\n\n# Keys\n*.json\n!package.json\n!tsconfig.json\n!Anchor.toml\n\n# Environment\n.env\n!.env.example\n\n# Logs\nlogs/\n*.log\n\n# IDE\n.vscode/\n.idea/\n*.swp\n*.swo\n.DS_Store\n\n# Test\ntest-ledger/\n.anchor/\n\n# Build\n*.so\ntarget/\n",
  
  "README.md": "# ASDF DAT - Automated Buyback & Burn System\n\n## Overview\nProduction-ready automated system for ASDF token buyback and burn on Solana.\n\n### Features\n- 🎲 **Random Execution**: 2 buybacks per day at random times (AM/PM)\n- 🔥 **Automatic Burns**: 100% of bought tokens are burned immediately\n- 💰 **Fee Collection**: Automatic collection from creator vault\n- 📊 **Web Dashboard**: Real-time monitoring and control\n- 🛡️ **Robust Error Handling**: Multi-RPC fallback, retry logic\n- ⚡ **Gas Optimized**: Efficient transaction management\n\n## Quick Start\n\n### 1. Install Dependencies\n```bash\nnpm install\n```\n\n### 2. Setup Wallet\n```bash\nsolana-keygen new --outfile wallet.json\n```\n\n### 3. Configure Environment\n```bash\ncp .env.example .env\n# Edit .env with your settings\n```\n\n### 4. Build Program\n```bash\nanchor build\n```\n\n### 5. Deploy Program\n```bash\nanchor deploy\n# Update PROGRAM_ID in .env\n```\n\n### 6. Initialize DAT\n```bash\nnpm run dat:init\n```\n\n### 7. Start Bot\n```bash\nnpm run dat:start\n```\n\n### 8. Launch Dashboard\n```bash\nnpm run dashboard\n# Open http://localhost:3000\n```\n\n## Production Deployment\n\n### Using PM2\n```bash\nnpm install -g pm2\nnpm run build\npm2 start ecosystem.config.js\npm2 save\npm2 startup\n```\n\n## Configuration\n\n- **Min Threshold**: 0.19 SOL\n- **Max Per Cycle**: 10 SOL\n- **Executions**: 2 random times daily (AM/PM)\n- **Slippage**: 1-3% adaptive\n\n## Architecture\n\n```\n┌─────────────┐     ┌──────────────┐     ┌─────────────┐\n│   Creator   │────▶│  DAT Program │────▶│  PumpSwap   │\n│    Vault    │     │   (On-chain) │     │     DEX     │\n└─────────────┘     └──────────────┘     └─────────────┘\n                           │\n                           ▼\n                    ┌──────────────┐\n                    │   Bot (TS)    │\n                    │  - Scheduler  │\n                    │  - Executor   │\n                    └──────────────┘\n                           │\n                           ▼\n                    ┌──────────────┐\n                    │  Web Dashboard│\n                    └──────────────┘\n```\n\n## Monitoring\n\nAccess dashboard at `http://localhost:3000` for:\n- Real-time metrics\n- Burn history charts\n- Control panel\n- Activity logs\n- System status\n\n## License\nMIT"
}